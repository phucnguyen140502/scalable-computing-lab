# -*- coding: utf-8 -*-
"""Lab5_Nguyễn_Đức_Nguyên_Phúc.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cPw6cKUdelZV2U710UbICMsZqpVlbohG

## Set up the Hadoop environment in Colab
"""

!wget https://dlcdn.apache.org/hadoop/common/hadoop-3.4.1/hadoop-3.4.1.tar.gz

!tar -xzvf hadoop-3.4.1.tar.gz

!ls

!rm -rf hadoop-3.4.1.tar.gz

!java -version

import os
os.environ["JAVA_HOME"] = "/usr/lib/jvm/java-11-openjdk-amd64"
os.environ["HADOOP_HOME"] = "/content/hadoop-3.4.1"

!echo $JAVA_HOME

"""### Get the input data"""

!wget -q http://content.udacity-data.com/courses/ud617/purchases.txt.gz
!ls

!gunzip purchases.txt.gz

!rm -rf purchases.txt.gz

!ls

!head -n 20 purchases.txt

"""### Exercise 1

#### Step 1: Create the mapper and reducer files
"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile mapper_ex1.py
# #!/usr/bin/env python3
# import sys
# for line in sys.stdin:
#   # Split the line into fields
#   fields = line.strip().split('\t')
# 
#   # Find item name and cost
#   if len(fields) == 6:
#       date, time, location, item, cost, payment = fields
#       # Emit item and cost
#       print(f"{item}\t{cost}")

# Commented out IPython magic to ensure Python compatibility.
# %%writefile reducer_ex1.py
# #!/usr/bin/env python3
# import sys
# from operator import itemgetter
# current_item = None
# total_cost = 0
# for line in sys.stdin:
#   line = line.strip()
#   item, cost = line.split('\t')
#   cost = float(cost)
#   if current_item == item:
#       total_cost += cost
#   else:
#       if current_item:
#           print(f"{current_item}\t{total_cost}")
#       current_item = item
#       total_cost = cost
# if current_item:
#     print(f"{current_item}\t{total_cost}")

"""####  Step 2: Make them executable

"""

!chmod +x mapper_ex1.py reducer_ex1.py

"""####  Step 3: Test locally

"""

!cat purchases.txt | python3 /content/mapper_ex1.py | sort | python3 /content/reducer_ex1.py | sort | head -n 20

"""####  Step 4: Run with Hadoop

"""

!find /content/hadoop-3.4.1/ -name "hadoop-streaming-*.jar"

!hadoop-3.4.1/bin/hadoop jar \
/content/hadoop-3.4.1/share/hadoop/tools/lib/hadoop-streaming-3.4.1.jar \
-input /content/purchases.txt \
-output /content/purchase_summary_items.txt \
-mapper /content/mapper_ex1.py \
-reducer /content/reducer_ex1.py

!cat /content/purchase_summary_items.txt/part-00000

"""### Exercise 2"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile mapper_ex2.py
# #!/usr/bin/env python3
# import sys
# for line in sys.stdin:
#   # Split the line into fields
#   fields = line.strip().split('\t')
# 
#   # Find item name and cost
#   if len(fields) == 6:
#       date, time, location, item, cost, payment = fields
#       # Emit item and cost
#       print(f"{location}\t{cost}")

# Commented out IPython magic to ensure Python compatibility.
# %%writefile reducer_ex2.py
# #!/usr/bin/env python3
# import sys
# from operator import itemgetter
# current_location = None
# total_cost = 0
# for line in sys.stdin:
#   line = line.strip()
#   location, cost = line.split('\t')
#   cost = float(cost)
#   if current_location == location:
#       total_cost += cost
#   else:
#       if current_location:
#           print(f"{current_location}\t{total_cost}")
#       current_location = location
#       total_cost = cost
# if current_location:
#     print(f"{current_location}\t{total_cost}")

!cat purchases.txt | python3 /content/mapper_ex2.py | sort | python3 /content/reducer_ex2.py | sort | head -n 20

!chmod +x mapper_ex2.py reducer_ex2.py

!hadoop-3.4.1/bin/hadoop jar \
/content/hadoop-3.4.1/share/hadoop/tools/lib/hadoop-streaming-3.4.1.jar \
-input /content/purchases.txt \
-output /content/purchase_expensive_location.txt \
-mapper /content/mapper_ex2.py \
-reducer /content/reducer_ex2.py

!cat /content/purchase_expensive_location.txt/part-00000